#ifndef NXOpen_FEATURES_FEATUREGROUP_HXX_INCLUDED
#define NXOpen_FEATURES_FEATUREGROUP_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_FeatureGroup.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_Feature.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class FeatureGroup;
    }
    namespace Features
    {
        class Feature;
    }
    namespace Features
    {
        class _FeatureGroupBuilder;
        class FeatureGroupImpl;
        /** Represents a @link Features::FeatureGroup Features::FeatureGroup@endlink   <br> Not support KF. <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  FeatureGroup : public Features::Feature
        {
            /** Feature group type. */
            public: enum Type
            {
                TypeNonEmbeddFeatureGroup/** Non-embedd feature group */,
                TypeEmbeddFeatureGroup/** Embed feature group */
            };

            private: FeatureGroupImpl * m_featuregroup_impl;
            private: friend class  _FeatureGroupBuilder;
            protected: FeatureGroup();
            public: ~FeatureGroup();
            /** Gets the feaure group type.  @return  Feature group type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::FeatureGroup::Type GetFeatureGroupType
            (
            );
            /** Sets the feaure group type. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetFeatureGroupType
            (
                NXOpen::Features::FeatureGroup::Type type /** Feature group type */
            );
            /** Removes all features from the feature group. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void RemoveAllMembers
            (
            );
            /** Removes given features from the feature group. 
             <br>  @deprecated Deprecated in NX7.5.3.  Use @link Features::FeatureGroup::NewRemoveMembers Features::FeatureGroup::NewRemoveMembers@endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public:  NX_DEPRECATED("Deprecated in NX7.5.3.  Use Features::FeatureGroup::NewRemoveMembers instead.") void RemoveMembers
            (
                const std::vector<NXOpen::Features::Feature *> & members /** Features array */
            );
            /** Removes given features from the feature group.If reorderTimestamp flag is ture, timestamp of remain member features will be more consecutive.
             <br>  Created in NX7.5.3.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void NewRemoveMembers
            (
                const std::vector<NXOpen::Features::Feature *> & members /** Features array */,
                bool reorderTimestamp /**Allow reorder member feature in order to make residual members consecutive*/
            );
            /** Adds given features into feature group. 
             <br>  @deprecated Deprecated in NX7.5.3.  Use @link Features::FeatureGroup::NewAddMembers Features::FeatureGroup::NewAddMembers@endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public:  NX_DEPRECATED("Deprecated in NX7.5.3.  Use Features::FeatureGroup::NewAddMembers instead.") void AddMembers
            (
                const std::vector<NXOpen::Features::Feature *> & members /** Features array */
            );
            /** Adds given features into feature group. 
             <br>  Created in NX7.5.3.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void NewAddMembers
            (
                const std::vector<NXOpen::Features::Feature *> & members /** Features array */,
                bool reorderTimestamp /**Allow reorder member feature in order to make members consecutive*/
            );
            /**Returns  the allow delete members flag of features group. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool AllowDeleteMembers
            (
            );
            /**Sets  the allow delete members flag of features group. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAllowDeleteMembers
            (
                bool allowDeleteMembers /** Allow delete members flag */
            );
            /** Gets the members of feature group. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void GetMembers
            (
                std::vector<NXOpen::Features::Feature *> & members /** Features array */
            );
            /**Try to make timestamps of members of feature group consecutive. 
             <br>  Created in NX7.5.3.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void MakeTimestampsConsecutive
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
