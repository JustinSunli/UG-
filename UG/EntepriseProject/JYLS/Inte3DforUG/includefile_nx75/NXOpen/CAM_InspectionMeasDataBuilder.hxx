#ifndef NXOpen_CAM_INSPECTIONMEASDATABUILDER_HXX_INCLUDED
#define NXOpen_CAM_INSPECTIONMEASDATABUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_InspectionMeasDataBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAM_InspectionMeasDataBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class InspectionMeasDataBuilder;
    }
    class Builder;
    namespace CAM
    {
        class _InspectionMeasDataBuilderBuilder;
        class InspectionMeasDataBuilderImpl;
        /** Inspection Measured Data dialog builder  <br> To create a new instance of this class, use @link CAM::InspectionOperationCollection::CreateInspectionMeasDataBuilder CAM::InspectionOperationCollection::CreateInspectionMeasDataBuilder@endlink  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  InspectionMeasDataBuilder : public Builder
        {
            /** Transform Display Types */
            public: enum DisplayTransformTypes
            {
                DisplayTransformTypesDesignDRF/** Design DRF */,
                DisplayTransformTypesActualDRF/** Actual DRF */,
                DisplayTransformTypesOuterProfile/** Outer Profile */,
                DisplayTransformTypesInnerProfile/** Inner Profile */
            };

            private: InspectionMeasDataBuilderImpl * m_inspectionmeasdatabuilder_impl;
            private: friend class  _InspectionMeasDataBuilderBuilder;
            protected: InspectionMeasDataBuilder();
            public: ~InspectionMeasDataBuilder();
            /**Returns  the measured data file 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString MeaFile
            (
            );
            /**Sets  the measured data file 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetMeaFile
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the measured data file 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            void SetMeaFile
            (
                const char * filename /** filename */ 
            );
            /**Returns  the name of the PCS to use when transforming data being loaded 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString PcsName
            (
            );
            /**Sets  the name of the PCS to use when transforming data being loaded 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetPcsName
            (
                const NXString & pcsName /** pcsname */ 
            );
            /**Sets  the name of the PCS to use when transforming data being loaded 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            void SetPcsName
            (
                const char * pcsName /** pcsname */ 
            );
            /** Load measured data file 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void LoadMea
            (
            );
            /** Unload measured data file 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void UnloadMea
            (
            );
            /**Returns  the option to highlight nominal faces for a feature 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool FeatHighlightNominal
            (
            );
            /**Sets  the option to highlight nominal faces for a feature 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetFeatHighlightNominal
            (
                bool featHighlightNominal /** feathighlightnominal */ 
            );
            /**Returns  the option to display design points for a feature 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool FeatDisplayDesPoints
            (
            );
            /**Sets  the option to display design points for a feature 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetFeatDisplayDesPoints
            (
                bool featDisplayDesPoints /** featdisplaydespoints */ 
            );
            /**Returns  the option to display measured points for a feature 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool FeatDisplayMeaPoints
            (
            );
            /**Sets  the option to display measured points for a feature 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetFeatDisplayMeaPoints
            (
                bool featDisplayMeaPoints /** featdisplaymeapoints */ 
            );
            /**Returns  the option to display the reconstructed feature 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool FeatDisplayReconstruct
            (
            );
            /**Sets  the option to display the reconstructed feature 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetFeatDisplayReconstruct
            (
                bool featDisplayReconstruct /** featdisplayreconstruct */ 
            );
            /**Returns  the option to highlight nominal faces for a tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool TolHighlightNominal
            (
            );
            /**Sets  the option to highlight nominal faces for a tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTolHighlightNominal
            (
                bool tolHighlightNominal /** tolhighlightnominal */ 
            );
            /**Returns  the option to display design points for the features of a tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool TolDisplayDesPoints
            (
            );
            /**Sets  the option to display design points for the features of a tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTolDisplayDesPoints
            (
                bool tolDisplayDesPoints /** toldisplaydespoints */ 
            );
            /**Returns  the option to display measured points for the features of a tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool TolDisplayMeaPoints
            (
            );
            /**Sets  the option to display measured points for the features of a tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTolDisplayMeaPoints
            (
                bool tolDisplayMeaPoints /** toldisplaymeapoints */ 
            );
            /**Returns  the option to display the reconstructed features of a tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool TolDisplayReconstruct
            (
            );
            /**Sets  the option to display the reconstructed features of a tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTolDisplayReconstruct
            (
                bool tolDisplayReconstruct /** toldisplayreconstruct */ 
            );
            /**Returns  the option to display the gauge in position for a tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool TolDisplayGauge
            (
            );
            /**Sets  the option to display the gauge in position for a tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTolDisplayGauge
            (
                bool tolDisplayGauge /** toldisplaygauge */ 
            );
            /**Returns  the option to display points in position for a tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool TolDisplayPoints
            (
            );
            /**Sets  the option to display points in position for a tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTolDisplayPoints
            (
                bool tolDisplayPoints /** toldisplaypoints */ 
            );
            /**Returns  the option to display tolerance whiskers 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool TolDisplayWhiskers
            (
            );
            /**Sets  the option to display tolerance whiskers 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTolDisplayWhiskers
            (
                bool tolDisplayWhiskers /** toldisplaywhiskers */ 
            );
            /**Returns  the whiskers multipler factor 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double MultFactor
            (
            );
            /**Sets  the whiskers multipler factor 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetMultFactor
            (
                double multFactor /** multfactor */ 
            );
            /**Returns  the option to display the tolerance DRF (datum reference frame) 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool TolDisplayDRF
            (
            );
            /**Sets  the option to display the tolerance DRF (datum reference frame) 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTolDisplayDRF
            (
                bool tolDisplayDRF /** toldisplaydrf */ 
            );
            /**Returns  the display transform 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionMeasDataBuilder::DisplayTransformTypes DisplayTransform
            (
            );
            /**Sets  the display transform 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetDisplayTransform
            (
                NXOpen::CAM::InspectionMeasDataBuilder::DisplayTransformTypes displayTransform /** displaytransform */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
